{"ast":null,"code":"import _classCallCheck from \"/Users/taimoorjaved/writers-blocks/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/taimoorjaved/writers-blocks/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/taimoorjaved/writers-blocks/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/taimoorjaved/writers-blocks/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/taimoorjaved/writers-blocks/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/taimoorjaved/writers-blocks/client/src/reset.js\";\nimport React, { Component } from 'react';\nimport queryString from 'query-string';\nimport ReactDOM from 'react-dom';\nimport './reset.css';\nimport logo from \"./logo.svg\";\nimport { Link } from 'react-router-dom';\nimport './homepage.css';\n\nvar reset =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(reset, _Component);\n\n  function reset() {\n    _classCallCheck(this, reset);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(reset).apply(this, arguments));\n  }\n\n  _createClass(reset, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var args = queryString.parse(this.props.location.search);\n      if (!args.reset) window.location.replace(\"/\");\n    }\n  }, {\n    key: \"onChangePass\",\n    value: function onChangePass() {\n      var password = document.getElementById('reset_password').value;\n      var args = queryString.parse(this.props.location.search);\n\n      if (!args.reset) {\n        window.location.replace(\"/\");\n        return;\n      }\n\n      document.getElementById('reset_password').value = \"\";\n      var account = this.props.match.params.account;\n      var obj = JSON.stringify({\n        \"account\": account,\n        \"reset\": args.reset,\n        \"password\": password\n      });\n      var xhttp = new XMLHttpRequest();\n      xhttp.open(\"POST\", \"/api/reset\", true);\n      xhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n\n      xhttp.onreadystatechange = function () {\n        if (this.readyState === 4 && this.status === 200) {\n          var response = JSON.parse(this.responseText);\n          console.log(response);\n\n          if (response.status === 'okay') {\n            localStorage.token = response.token;\n            localStorage.account = response.account;\n            window.location.replace(\"/profile/\" + response.account);\n          }\n        }\n      };\n\n      xhttp.send(obj);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"notification-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"head1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"logo\",\n        href: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"anthologist\")))), React.createElement(\"input\", {\n        id: \"search_input bar\",\n        className: \"in\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"notify\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"notimg\",\n        src: \"/notification-icon.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), \" \"), React.createElement(\"button\", {\n        className: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"userimg\",\n        src: \"/avatar.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), \" \"), React.createElement(\"button\", {\n        className: \"search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"searchimg\",\n        src: \"/search.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), \" \")), React.createElement(\"div\", {\n        className: \"box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"reset_pass\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"login-labels\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \" Enter New Password                             \"), React.createElement(\"input\", {\n        className: \"label-inputs\",\n        type: \"password\",\n        id: \"reset_password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"submit-buttons\",\n        id: \"up_btn\",\n        onClick: function onClick() {\n          return _this.onChangePass();\n        },\n        color: \"blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Submit\"), ' ')));\n    }\n  }]);\n\n  return reset;\n}(Component);\n\nexport default reset;","map":{"version":3,"sources":["/Users/taimoorjaved/writers-blocks/client/src/reset.js"],"names":["React","Component","queryString","ReactDOM","Link","reset","args","parse","props","location","search","window","replace","password","document","getElementById","value","account","match","params","obj","JSON","stringify","xhttp","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","status","response","responseText","console","log","localStorage","token","send","onChangePass"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport queryString from 'query-string';\nimport ReactDOM from 'react-dom';\n\nimport './reset.css';\n\nimport logo from './logo.svg';\nimport {Link} from 'react-router-dom';\nimport './homepage.css';\n\n\nclass reset extends Component {\n  componentDidMount() {\n    const args = queryString.parse(this.props.location.search)\n\n    if ( !args.reset ) window.location.replace(\"/\");\n  }\n\n  onChangePass(){\n\n    var password = document.getElementById('reset_password').value;\n\n    const args = queryString.parse(this.props.location.search)\n\n    if ( !args.reset )\n    {\n        window.location.replace(\"/\");\n        return;\n    }\n\n    document.getElementById('reset_password').value = \"\";\n\n    var account = this.props.match.params.account;\n\n    var obj = JSON.stringify({\"account\":account,\"reset\":args.reset,\"password\":password});\n\n    var xhttp = new XMLHttpRequest();\n    xhttp.open(\"POST\", \"/api/reset\" , true);\n    xhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n    xhttp.onreadystatechange = function () {\n       if(this.readyState === 4 && this.status === 200) {\n\n         var response = JSON.parse(this.responseText);\n         console.log(response);\n\n         if (response.status === 'okay') {\n           localStorage.token = response.token;\n           localStorage.account = response.account;\n           window.location.replace(\"/profile/\" + response.account)\n         }\n\n\n       }\n    };\n    xhttp.send(obj);\n\n  }\n\n  render() {\n    return (\n\n        <div className=\"App\">\n        \n        {/* Menu top bar */}\n        <div className=\"notification-bar\">\n\n        {/* Anthologist logo */}\n        <div className=\"head\">\n          <h1 className=\"head1\">\n          <Link to='/'><a className=\"logo\" href>anthologist</a></Link></h1>\n        </div>\n        \n        {/* Search Bar */}\n        <input id=\"search_input bar\" className=\"in\" type=\"text\" ></input>\n        <button className=\"notify\"><img className=\"notimg\" src='/notification-icon.png'></img> </button>\n        <button className=\"user\"><img className=\"userimg\" src='/avatar.png'></img> </button>\n         <button className=\"search\"><img className=\"searchimg\" src='/search.png'></img> </button>\n\n        </div>\n\n        \n        <div className=\"box\">\n        \n\n        <div class=\"reset_pass\">\n        <label className='login-labels'> Enter New Password                             </label>\n        <input className='label-inputs' type=\"password\" id=\"reset_password\"/>\n        <button className=\"submit-buttons\" id =\"up_btn\" onClick={() => this.onChangePass()} \n        color=\"blue\">Submit</button>{' '}\n        \n\n        </div>\n\n        </div>\n\n        \n        </div>\n\n    );\n  }\n}\n\nexport default reset;\n"]},"metadata":{},"sourceType":"module"}