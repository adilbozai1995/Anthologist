{"ast":null,"code":"import _classCallCheck from \"/Users/taimoorjaved/writers-blocks/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/taimoorjaved/writers-blocks/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/taimoorjaved/writers-blocks/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/taimoorjaved/writers-blocks/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/taimoorjaved/writers-blocks/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/taimoorjaved/writers-blocks/client/src/testingDynamic.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport ReactDOM from 'react-dom';\n\nvar testingDynamic =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(testingDynamic, _React$Component);\n\n  function testingDynamic() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, testingDynamic);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(testingDynamic)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      value: {},\n      blocks: [{\n        index: 1,\n        block: \"Block1\"\n      }, {\n        index: 2,\n        block: \"Block2\"\n      }, {\n        index: 3,\n        block: \"Block3\"\n      }] //Function to add a block\n\n    };\n\n    _this.onAddItem = function () {\n      _this.setState(function (state) {\n        var blocks = state.blocks.concat(state.value);\n        return {\n          blocks: blocks,\n          value: {}\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(testingDynamic, [{\n    key: \"render\",\n    value: function render() {\n      return (// Story Box where each block gets added\n        React.createElement(\"div\", {\n          className: \"story-div\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, // Iterates over each element in the blocks array in the state and makes a span\n        this.state.blocks.map(function (_ref) {\n          var block = _ref.block,\n              index = _ref.index;\n          return React.createElement(\"span\", {\n            key: index.toString(),\n            className: \"block\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }, block, React.createElement(\"button\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }, \"LIKE\"));\n        }), React.createElement(\"button\", {\n          type: \"button\",\n          onClick: this.onAddItem,\n          disabled: !this.state.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, \"Add\"))\n      );\n    }\n  }]);\n\n  return testingDynamic;\n}(React.Component);\n\nexport default testingDynamic;","map":{"version":3,"sources":["/Users/taimoorjaved/writers-blocks/client/src/testingDynamic.js"],"names":["React","Component","ReactDOM","testingDynamic","state","value","blocks","index","block","onAddItem","setState","concat","map","toString"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAGA,OAAOC,QAAP,MAAqB,WAArB;;IAGMC,c;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,KAAK,EAAG,EADJ;AAEJC,MAAAA,MAAM,EAAE,CAAC;AAACC,QAAAA,KAAK,EAAE,CAAR;AAAWC,QAAAA,KAAK,EAAG;AAAnB,OAAD,EAA+B;AAACD,QAAAA,KAAK,EAAE,CAAR;AAAWC,QAAAA,KAAK,EAAE;AAAlB,OAA/B,EAA2D;AAACD,QAAAA,KAAK,EAAE,CAAR;AAAWC,QAAAA,KAAK,EAAE;AAAlB,OAA3D,CAFJ,CAKR;;AALQ,K;;UAMRC,S,GAAY,YAAK;AACb,YAAKC,QAAL,CAAc,UAAAN,KAAK,EAAI;AACnB,YAAME,MAAM,GAAGF,KAAK,CAACE,MAAN,CAAaK,MAAb,CAAoBP,KAAK,CAACC,KAA1B,CAAf;AACA,eAAO;AACHC,UAAAA,MAAM,EAANA,MADG;AAEHD,UAAAA,KAAK,EAAC;AAFH,SAAP;AAIH,OAND;AAOH,K;;;;;;;6BAEQ;AACL,aACI;AACC;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEG;AACF,aAAKD,KAAL,CAAWE,MAAX,CAAkBM,GAAlB,CAAsB,gBAAiB;AAAA,cAAfJ,KAAe,QAAfA,KAAe;AAAA,cAATD,KAAS,QAATA,KAAS;AACrC,iBACE;AAAM,YAAA,GAAG,EAAEA,KAAK,CAACM,QAAN,EAAX;AAA6B,YAAA,SAAS,EAAC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAiDL,KAAjD,EACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF;AAKD,SAND,CAHD,EAaD;AACF,UAAA,IAAI,EAAC,QADH;AAEF,UAAA,OAAO,EAAE,KAAKC,SAFZ;AAGF,UAAA,QAAQ,EAAE,CAAC,KAAKL,KAAL,CAAWC,KAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAbC;AAFL;AAwBH;;;;EA3CwBL,KAAK,CAACC,S;;AA8CjC,eAAeE,cAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport logo from './logo.svg';\nimport ReactDOM from 'react-dom';\n\n\nclass testingDynamic extends React.Component {\n\n    state = {\n        value : {},\n        blocks: [{index: 1, block : \"Block1\"}, {index: 2, block: \"Block2\"},{index: 3, block: \"Block3\"}]\n    }\n\n    //Function to add a block\n    onAddItem = () =>{\n        this.setState(state => {\n            const blocks = state.blocks.concat(state.value);\n            return {\n                blocks,\n                value:{},\n            };\n        });\n    };\n\n    render() {\n        return (\n            // Story Box where each block gets added\n             <div className='story-div' >\n            {\n                // Iterates over each element in the blocks array in the state and makes a span\n              this.state.blocks.map(({block,index})=>{\n                return (\n                  <span key={index.toString()} className='block' >{block}\n                    <button>LIKE</button>\n                  </span>\n                )\n              })\n            }\n\n            {/* Button to add a block */}\n            <button\n          type=\"button\"\n          onClick={this.onAddItem}\n          disabled={!this.state.value}\n        >\n          Add\n        </button>\n            </div>\n        )\n    }\n  }\n\n  export default testingDynamic;\n"]},"metadata":{},"sourceType":"module"}