{"ast":null,"code":"import _classCallCheck from \"/Users/taimoorjaved/writers-blocks/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/taimoorjaved/writers-blocks/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/taimoorjaved/writers-blocks/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/taimoorjaved/writers-blocks/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/taimoorjaved/writers-blocks/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/taimoorjaved/writers-blocks/client/src/story.js\";\nimport React, { Component } from 'react';\nimport { Link, Prompt } from 'react-router-dom';\nimport './story.css';\nimport Modal from 'react-modal';\nimport ReactDOM from 'react-dom';\nvar customStyles = {\n  content: {\n    top: '10%',\n    left: '10%',\n    right: 'auto',\n    bottom: 'auto',\n    color: 'red',\n    backgroundColor: 'white',\n    marginRight: '10%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\n\nvar Popup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Popup, _React$Component);\n\n  function Popup() {\n    _classCallCheck(this, Popup);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Popup).apply(this, arguments));\n  }\n\n  _createClass(Popup, [{\n    key: \"ViewStory\",\n    value: function ViewStory() {}\n  }, {\n    key: \"submit\",\n    value: function submit() {\n      if (!localStorage.account || !localStorage.token || !sessionStorage.mystory) return;\n      var story = sessionStorage.mystory;\n      var vtime = document.getElementById(\"vote_time\").value;\n      document.getElementById(\"vote_time\").value = \"\";\n      var obj = JSON.stringify({\n        \"account\": localStorage.account,\n        \"token\": localStorage.token,\n        \"story\": story,\n        \"votetime\": vtime\n      });\n      var xhttp = new XMLHttpRequest();\n      xhttp.open(\"POST\", \"/api/story-editvote\", true);\n      xhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n\n      xhttp.onreadystatechange = function () {\n        if (this.readyState === 4 && this.status === 200) {\n          var response = JSON.parse(this.responseText);\n          console.log(response);\n\n          if (response.status === 'okay') {\n            document.getElementById('votesTime').innerHTML = \"Vote Time (minutes): \" + vtime;\n          }\n        }\n      };\n\n      xhttp.send(obj);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"div\", {\n        className: \"popup_view_story\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"popup_inner_story\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"st\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Enter new voting time : \"), React.createElement(\"input\", {\n        className: \"input_new\",\n        type: \"text\",\n        id: \"vote_time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this.submit();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        onClick: this.props.closePopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Done\")));\n    }\n  }]);\n\n  return Popup;\n}(React.Component);\n\nvar story =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(story, _Component);\n\n  function story() {\n    var _this2;\n\n    _classCallCheck(this, story);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(story).call(this));\n    _this2.state = {\n      StoryIsOpen: false,\n      secondModalIsOpen: false,\n      addBlockIsOpen: false\n    };\n\n    _this2.StoryopenModal = function (storyText) {\n      _this2.setState({\n        StorymodalIsOpen: true,\n        StoryModalText: storyText\n      });\n    };\n\n    _this2.StorycloseModal = function () {\n      _this2.setState({\n        StorymodalIsOpen: false\n      });\n    };\n\n    _this2.openSecondModal = function () {\n      _this2.setState({\n        secondModalIsOpen: true\n      });\n    };\n\n    _this2.closeSecondModal = function () {\n      _this2.setState({\n        secondModalIsOpen: false\n      });\n    };\n\n    _this2.open_addBlock = function () {\n      _this2.setState({\n        addBlockIsOpen: true\n      });\n    };\n\n    _this2.close_addBlock = function () {\n      _this2.setState({\n        addBlockIsOpen: false\n      });\n    };\n\n    _this2.onAddItem = function (updateVal, regblock) {\n      _this2.setState(function (state) {\n        if (!regblock) {\n          var proposed = state.proposed.concat(updateVal);\n          return {\n            proposed: proposed,\n            value: {}\n          };\n        } else {\n          var blocks = state.blocks.concat(updateVal);\n          return {\n            blocks: blocks,\n            value: {}\n          };\n        }\n      });\n    };\n\n    _this2.onClickLike = function (blockId) {\n      if (!localStorage.account || !localStorage.token) return;\n      var obj = JSON.stringify({\n        \"account\": localStorage.account,\n        \"token\": localStorage.token,\n        \"block\": blockId\n      });\n      var xhttp = new XMLHttpRequest();\n      xhttp.open(\"POST\", \"/api/block-vote\", true);\n      xhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n\n      xhttp.onreadystatechange = function () {\n        if (this.readyState === 4 && this.status === 200) {\n          var response = JSON.parse(this.responseText);\n          console.log(response);\n\n          if (response.status === 'okay') {\n            window.location.reload();\n          }\n        }\n      };\n\n      xhttp.send(obj);\n    };\n\n    _this2.state = {\n      showPopup: false,\n      value: {},\n      blocks: [],\n      proposed: []\n    };\n    return _this2;\n  }\n  /*Modal declared*/\n\n\n  _createClass(story, [{\n    key: \"togglePopup\",\n    value: function togglePopup() {\n      this.setState({\n        showPopup: !this.state.showPopup\n      });\n    }\n  }, {\n    key: \"onBookmarkClicked\",\n    value: function onBookmarkClicked() {\n      if (!localStorage.account || !localStorage.token) return;\n      var story = this.props.match.params.story;\n      var obj = JSON.stringify({\n        \"account\": localStorage.account,\n        \"token\": localStorage.token,\n        \"story\": story\n      });\n      var xhttp = new XMLHttpRequest();\n      xhttp.open(\"POST\", \"/api/story-bookmark\", true);\n      xhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n\n      xhttp.onreadystatechange = function () {\n        if (this.readyState === 4 && this.status === 200) {\n          var response = JSON.parse(this.responseText);\n          console.log(response);\n\n          if (response.status === 'okay') {}\n        }\n      };\n\n      xhttp.send(obj);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var story = this.props.match.params.story;\n      sessionStorage.mystory = story;\n      sessionStorage.canEndStory = false;\n      var obj = JSON.stringify({\n        \"story\": story\n      });\n      var updateBlock = this.onAddItem;\n      var xhttp = new XMLHttpRequest();\n      xhttp.open(\"POST\", \"/api/story-fetch\", true);\n      xhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n\n      xhttp.onreadystatechange = function () {\n        if (this.readyState === 4 && this.status === 200) {\n          var response = JSON.parse(this.responseText);\n          console.log(response);\n\n          if (response.status === 'okay') {\n            document.getElementById('story-title').innerHTML = response.title;\n            document.getElementById('charLimit').innerHTML = \"Character Limit: \" + response.charlimit;\n            document.getElementById('minBl').innerHTML = \"Min Story Len: \" + response.storylen;\n            document.getElementById('votesLimit').innerHTML = \"Min Blocks for Vote: \" + response.minblock;\n            document.getElementById('votesTime').innerHTML = \"Vote Time (minutes): \" + response.votetime;\n            document.getElementById('nViews').innerHTML = response.views + \" Views\";\n            document.getElementById('nLikes').innerHTML = response.rating + \" Likes\";\n\n            if (response.votemode) {\n              setInterval(function () {\n                var seconds = Math.max(response.votestart + response.votetime * 60 - Date.now() / 1000, 0);\n                var minutes = Math.floor(seconds / 60);\n                seconds = seconds % 60;\n                var hours = Math.floor(minutes / 60);\n                minutes = minutes % 60;\n                seconds = Math.floor(seconds);\n\n                if (hours > 0) {\n                  document.getElementById('nCount').innerHTML = hours + \":\" + minutes + \":\" + seconds + \" Until voting ends\";\n                } else if (minutes > 0) {\n                  document.getElementById('nCount').innerHTML = minutes + \":\" + seconds + \" Until voting ends\";\n                } else {\n                  document.getElementById('nCount').innerHTML = seconds + \" Until voting ends\";\n                }\n              }, 1000);\n            } else {\n              var blockCount = 0;\n\n              for (var i = 0; i < response.blocks.length; i++) {\n                if (response.blocks[i].iteration === response.iteration) {\n                  blockCount++;\n                }\n              }\n\n              blockCount = Math.max(response.minblock - blockCount, 0);\n              document.getElementById('nCount').innerHTML = blockCount + \" Blocks until voting starts\";\n            } // Check if we can end the story\n\n\n            sessionStorage.canEndStory = response.iteration < response.storylen;\n\n            for (var i = 0; i < response.blocks.length; i++) {\n              var cblock = response.blocks[i];\n              updateBlock({\n                \"id\": cblock.id,\n                \"iteration\": cblock.iteration,\n                \"content\": cblock.content,\n                \"author\": cblock.author,\n                \"username\": cblock.username,\n                \"flag\": cblock.flag,\n                \"rating\": cblock.rating,\n                \"ending\": cblock.ending\n              }, cblock.iteration < response.iteration);\n            }\n          } else {\n            window.location.replace(\"/\");\n          }\n        } else if (this.status === 400) {\n          window.location.replace(\"/\");\n        }\n      };\n\n      xhttp.send(obj);\n    }\n  }, {\n    key: \"onAddBlock\",\n    value: function onAddBlock() {\n      /*UPDATE THE STORY HERE*/\n      if (!localStorage.account || !localStorage.token) return;\n      var story = this.props.match.params.story;\n      var ending = 0;\n      if (document.getElementById(\"eos_check\").checked) ending = 1;\n      var obj = JSON.stringify({\n        \"account\": localStorage.account,\n        \"token\": localStorage.token,\n        \"story\": story,\n        \"text\": document.getElementById(\"new_block\").value,\n        \"ending\": ending\n      });\n      document.getElementById(\"new_block\").value = \"\";\n      document.getElementById(\"eos_check\").checked = false;\n      var xhttp = new XMLHttpRequest();\n      xhttp.open(\"POST\", \"/api/block-create\", true);\n      xhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n\n      xhttp.onreadystatechange = function () {\n        if (this.readyState === 4 && this.status === 200) {\n          var response = JSON.parse(this.responseText);\n          console.log(response);\n\n          if (response.status === 'okay') {\n            // Refreshing is the easiest way\n            window.location.reload();\n          }\n        }\n      };\n\n      xhttp.send(obj);\n    }\n  }, {\n    key: \"onFlag2\",\n    value: function onFlag2() {\n      if (!localStorage.account || !localStorage.token) return;\n      var story = this.props.match.params.story;\n      var obj = JSON.stringify({\n        \"account\": localStorage.account,\n        \"token\": localStorage.token,\n        \"flag\": story\n      });\n      var xhttp = new XMLHttpRequest();\n      xhttp.open(\"POST\", \"/api/story-flag\", true);\n      xhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n\n      xhttp.onreadystatechange = function () {\n        if (this.readyState === 4 && this.status === 200) {\n          var response = JSON.parse(this.responseText);\n          console.log(response);\n\n          if (response.status === 'okay') {}\n        }\n      };\n\n      xhttp.send(obj);\n    } //-----------------------FUNCTION TO ADD A BLOCK DYNAMICALLY-------------------------\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"notification-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"head1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"logo\",\n        href: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }, \"anthologist\")))), React.createElement(\"button\", {\n        className: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"userimg\",\n        src: \"/man.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      })), \" \")), React.createElement(\"div\", {\n        id: \"story-title\",\n        className: \"StoryTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, \" Working Title\", React.createElement(\"a\", {\n        className: \"title\",\n        href: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, \" \"), \" \"), React.createElement(\"div\", {\n        className: \"blocks-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }, this.state.blocks.map(function (_ref) {\n        var id = _ref.id,\n            iteration = _ref.iteration,\n            content = _ref.content,\n            author = _ref.author,\n            username = _ref.username,\n            flag = _ref.flag,\n            rating = _ref.rating,\n            ending = _ref.ending;\n        return React.createElement(\"div\", {\n          className: \"blocks\",\n          key: id.toString(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 430\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this3.StoryopenModal(content);\n          },\n          className: \"st\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 431\n          },\n          __self: this\n        }, content.toString().substring(0, 15) + \" ...\"), React.createElement(\"a\", {\n          href: \"/profile/\" + author.toString(),\n          className: \"author\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 432\n          },\n          __self: this\n        }, username.toString()), React.createElement(\"div\", {\n          className: \"slash\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 433\n          },\n          __self: this\n        }, \"/\"), React.createElement(\"button\", {\n          className: \"likeButton2\",\n          onClick: function onClick() {\n            return _this3.onClickLike(id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 434\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          id: \"like\",\n          className: \"far fa-thumbs-up fa-2x\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 434\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"likes\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 435\n          },\n          __self: this\n        }, rating.toString(), \" Likes\"));\n      })), React.createElement(\"div\", {\n        className: \"nOfLikes\",\n        id: \"nLikes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444\n        },\n        __self: this\n      }, \"400 Likes\"), React.createElement(\"div\", {\n        className: \"nOfViews\",\n        id: \"nViews\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447\n        },\n        __self: this\n      }, \"100 Views\"), React.createElement(\"div\", {\n        className: \"n1Count\",\n        id: \"nCount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        },\n        __self: this\n      }, \"100 Min\"), React.createElement(\"div\", {\n        className: \"book-logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"bookimg\",\n        src: \"/book.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"attributesBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"attributes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }, \"Attributes\"), React.createElement(\"div\", {\n        className: \"cLimit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"charLimit\",\n        className: \"st4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"minBlocks\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"minBl\",\n        className: \"st4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"vLimit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"votesLimit\",\n        className: \"st4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"vTime\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"votesTime\",\n        className: \"st4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }))), React.createElement(\"button\", {\n        className: \"changeTimeButton\",\n        id: \"changeTime\",\n        onClick: this.togglePopup.bind(this),\n        color: \"blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        },\n        __self: this\n      }, \"Change Vote Time \"), React.createElement(\"button\", {\n        id: \"flagID\",\n        className: \"flagStory\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"flagimg\",\n        src: \"/flg.png\",\n        onClick: function onClick() {\n          return _this3.onFlag2();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      }), \" \"), React.createElement(\"div\", {\n        className: \"proposed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486\n        },\n        __self: this\n      }, this.state.proposed.map(function (_ref2) {\n        var id = _ref2.id,\n            iteration = _ref2.iteration,\n            content = _ref2.content,\n            author = _ref2.author,\n            username = _ref2.username,\n            flag = _ref2.flag,\n            rating = _ref2.rating,\n            ending = _ref2.ending;\n        return React.createElement(\"div\", {\n          className: \"p-blocks\",\n          key: id.toString(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 490\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this3.StoryopenModal(content);\n          },\n          className: \"st1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 491\n          },\n          __self: this\n        }, content.toString().substring(0, 15) + \"...\"), React.createElement(\"a\", {\n          href: \"/profile/\" + author.toString(),\n          className: \"author1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 492\n          },\n          __self: this\n        }, username.toString()), React.createElement(\"div\", {\n          className: \"slash1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 493\n          },\n          __self: this\n        }, \"/\"), React.createElement(\"button\", {\n          className: \"likeButton3\",\n          onClick: function onClick() {\n            return _this3.onClickLike(id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 494\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          id: \"like\",\n          className: \"far fa-thumbs-up fa-2x\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 494\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"likes1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 495\n          },\n          __self: this\n        }, rating.toString(), \" Likes\"));\n      })), React.createElement(\"button\", {\n        className: \"addAButton\",\n        onClick: this.open_addBlock,\n        id: \"addAButtonID\",\n        color: \"blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522\n        },\n        __self: this\n      }, \"Add a block\"), React.createElement(\"button\", {\n        className: \"bookmark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"bkimg\",\n        onClick: function onClick() {\n          return _this3.onBookmarkClicked();\n        },\n        src: \"/bookmark.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525\n        },\n        __self: this\n      }), \" \"), this.state.showPopup ? React.createElement(Popup, {\n        text: \"Close Me\",\n        closePopup: this.togglePopup.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531\n        },\n        __self: this\n      }) : null, React.createElement(Modal\n      /*THIS A STORY YOU NEED TO CHANGE*/\n      , {\n        isOpen: this.state.StorymodalIsOpen,\n        onRequestClose: this.StorycloseModal,\n        style: customStyles,\n        contentLabel: \"Example Modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.StorycloseModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544\n        },\n        __self: this\n      }, \"close\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545\n        },\n        __self: this\n      }, this.state.StoryModalText)), React.createElement(Modal, {\n        isOpen: this.state.secondModalIsOpen,\n        onRequestClose: this.closeSecondModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.closeSecondModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552\n        },\n        __self: this\n      }, \" close \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553\n        },\n        __self: this\n      }, \"No dude\")), React.createElement(Modal, {\n        isOpen: this.state.addBlockIsOpen,\n        onRequestClose: this.close_addBlock,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"change-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"change-descp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562\n        },\n        __self: this\n      }, \" Add Block   \"), React.createElement(\"textarea\", {\n        className: \"add_block\",\n        type: \"text\",\n        id: \"new_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this3.onAddBlock();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565\n        },\n        __self: this\n      }, \"Add Block\"), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"eos_check\",\n        disabled: sessionStorage.canEndStory,\n        value: \"ES\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567\n        },\n        __self: this\n      }), \"End of Story\"), React.createElement(\"button\", {\n        onClick: this.close_addBlock,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571\n        },\n        __self: this\n      }, \"close\")));\n    }\n  }]);\n\n  return story;\n}(Component);\n\nexport default story;","map":{"version":3,"sources":["/Users/taimoorjaved/writers-blocks/client/src/story.js"],"names":["React","Component","Link","Prompt","Modal","ReactDOM","customStyles","content","top","left","right","bottom","color","backgroundColor","marginRight","transform","Popup","localStorage","account","token","sessionStorage","mystory","story","vtime","document","getElementById","value","obj","JSON","stringify","xhttp","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","status","response","parse","responseText","console","log","innerHTML","send","submit","props","closePopup","state","StoryIsOpen","secondModalIsOpen","addBlockIsOpen","StoryopenModal","storyText","setState","StorymodalIsOpen","StoryModalText","StorycloseModal","openSecondModal","closeSecondModal","open_addBlock","close_addBlock","onAddItem","updateVal","regblock","proposed","concat","blocks","onClickLike","blockId","window","location","reload","showPopup","match","params","canEndStory","updateBlock","title","charlimit","storylen","minblock","votetime","views","rating","votemode","setInterval","seconds","Math","max","votestart","Date","now","minutes","floor","hours","blockCount","i","length","iteration","cblock","id","author","username","flag","ending","replace","checked","map","toString","substring","togglePopup","bind","onFlag2","onBookmarkClicked","onAddBlock"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link,Prompt } from 'react-router-dom';\nimport './story.css';\nimport Modal from 'react-modal'\nimport ReactDOM from 'react-dom';\n\nconst customStyles = {\n  content : {\n    top                   : '10%',\n    left                  : '10%',\n    right                 : 'auto',\n    bottom                : 'auto',\n    color                 : 'red',\n    backgroundColor       : 'white',\n    marginRight           : '10%',\n    transform             : 'translate(-50%, -50%)'\n  }\n};\n\nclass Popup extends React.Component {\n    ViewStory(){\n\n\n    }\n\n    submit()\n    {\n        if ( !localStorage.account || !localStorage.token || !sessionStorage.mystory ) return;\n\n        var story = sessionStorage.mystory\n\n        var vtime = document.getElementById(\"vote_time\").value\n        document.getElementById(\"vote_time\").value = \"\"\n\n        var obj = JSON.stringify({\n            \"account\": localStorage.account,\n            \"token\": localStorage.token,\n            \"story\": story,\n            \"votetime\": vtime\n        })\n\n        var xhttp = new XMLHttpRequest();\n        xhttp.open(\"POST\", \"/api/story-editvote\" , true);\n        xhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n        xhttp.onreadystatechange = function ()\n        {\n            if ( this.readyState === 4 && this.status === 200 )\n            {\n                var response = JSON.parse(this.responseText);\n                console.log(response);\n\n                if ( response.status === 'okay' )\n                {\n                    document.getElementById('votesTime').innerHTML = \"Vote Time (minutes): \" + vtime\n                }\n            }\n        };\n        xhttp.send(obj);\n    }\n\n  render() {\n    return (\n      <div className='popup_view_story'>\n        <div className='popup_inner_story'>\n\n        <div><span className='st'>Enter new voting time : </span>\n                <input className='input_new' type=\"text\" id=\"vote_time\"/>\n            </div>\n        <button onClick={() => this.submit()}>Submit</button>\n        <button onClick={this.props.closePopup}>Done</button>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n\n\nclass story extends Component {\n  \n  constructor() {\n    super();\n    this.state = {\n      showPopup: false,\n      value : {},\n      blocks:[],\n      proposed:[]\n    };\n  }\n\n   /*Modal declared*/\n   state = {\n    StoryIsOpen: false,\n    secondModalIsOpen: false,\n    addBlockIsOpen:false\n  };\n\n  StoryopenModal = (storyText) => {\n    this.setState({ StorymodalIsOpen: true, StoryModalText: storyText });\n  };\n\n  StorycloseModal = () => {\n    this.setState({ StorymodalIsOpen: false });\n  };\n\n  openSecondModal = () => {\n    this.setState({ secondModalIsOpen: true });\n  };\n\n  closeSecondModal = () => {\n    this.setState({ secondModalIsOpen: false });\n  };\n  open_addBlock = () => {\n    this.setState({ addBlockIsOpen: true });\n  };\n\n  close_addBlock = () => {\n    this.setState({ addBlockIsOpen: false });\n  };\n  \n\n  togglePopup() {\n    this.setState({\n      showPopup: !this.state.showPopup\n    });\n  }\n  \n  onBookmarkClicked(){\n    if ( !localStorage.account || !localStorage.token ) return;\n\n    var story = this.props.match.params.story;\n\n    var obj = JSON.stringify({\n        \"account\": localStorage.account,\n        \"token\": localStorage.token,\n        \"story\": story\n    });\n\n    var xhttp = new XMLHttpRequest();\n    xhttp.open(\"POST\", \"/api/story-bookmark\" , true);\n    xhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n    xhttp.onreadystatechange = function ()\n    {\n        if ( this.readyState === 4 && this.status === 200 )\n        {\n            var response = JSON.parse(this.responseText);\n            console.log(response);\n\n            if ( response.status === 'okay' )\n            {\n\n            }\n        }\n    };\n    xhttp.send(obj);\n  }\n\n  componentDidMount()\n  {\n    var story = this.props.match.params.story;\n\n    sessionStorage.mystory = story\n    sessionStorage.canEndStory = false;\n\n    var obj = JSON.stringify({\n        \"story\":story\n    });\n\n    const updateBlock = this.onAddItem;\n\n    var xhttp = new XMLHttpRequest();\n    xhttp.open(\"POST\", \"/api/story-fetch\" , true);\n    xhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n    xhttp.onreadystatechange = function ()\n    {\n        if ( this.readyState === 4 && this.status === 200 )\n        {\n\n            var response = JSON.parse(this.responseText);\n            console.log(response);\n\n            if ( response.status === 'okay' )\n            {\n                document.getElementById('story-title').innerHTML = response.title\n                document.getElementById('charLimit').innerHTML = \"Character Limit: \" + response.charlimit\n                document.getElementById('minBl').innerHTML = \"Min Story Len: \" + response.storylen\n                document.getElementById('votesLimit').innerHTML = \"Min Blocks for Vote: \" + response.minblock\n                document.getElementById('votesTime').innerHTML = \"Vote Time (minutes): \" + response.votetime\n                document.getElementById('nViews').innerHTML = response.views + \" Views\"\n                document.getElementById('nLikes').innerHTML = response.rating + \" Likes\"\n\n                if ( response.votemode )\n                {\n                    setInterval( function()\n                    {\n                        var seconds = Math.max( (response.votestart + (response.votetime * 60 )) - (Date.now() / 1000), 0 )\n                        var minutes = Math.floor( seconds / 60 )\n                        seconds = seconds % 60\n                        var hours = Math.floor( minutes / 60 )\n                        minutes = minutes % 60\n\n                        seconds = Math.floor( seconds )\n\n                        if ( hours > 0 )\n                        {\n                            document.getElementById('nCount').innerHTML = hours + \":\" + minutes + \":\" + seconds + \" Until voting ends\";\n                        }\n                        else if ( minutes > 0 )\n                        {\n                            document.getElementById('nCount').innerHTML = minutes + \":\" + seconds + \" Until voting ends\";\n                        }\n                        else\n                        {\n                            document.getElementById('nCount').innerHTML = seconds + \" Until voting ends\";\n                        }\n\n                    }, 1000 );\n                }\n                else\n                {\n                    var blockCount = 0;\n\n                    for ( var i = 0; i < response.blocks.length; i++ )\n                    {\n                        if ( response.blocks[i].iteration === response.iteration )\n                        {\n                            blockCount++;\n                        }\n                    }\n\n                    blockCount = Math.max( response.minblock - blockCount, 0 )\n\n                    document.getElementById('nCount').innerHTML = blockCount + \" Blocks until voting starts\"\n                }\n\n                // Check if we can end the story\n                sessionStorage.canEndStory = (response.iteration < response.storylen)\n\n                for ( var i = 0; i < response.blocks.length; i++ )\n                {\n                    var cblock = response.blocks[i]\n\n                    updateBlock({\n                        \"id\":cblock.id,\n                        \"iteration\":cblock.iteration,\n                        \"content\":cblock.content,\n                        \"author\":cblock.author,\n                        \"username\":cblock.username,\n                        \"flag\":cblock.flag,\n                        \"rating\":cblock.rating,\n                        \"ending\":cblock.ending\n                    }, cblock.iteration < response.iteration );\n                }\n            }\n            else\n            {\n                window.location.replace(\"/\")\n            }\n        }\n        else if ( this.status === 400 )\n        {\n            window.location.replace(\"/\")\n        }\n     };\n     xhttp.send(obj);\n  }\n\n  onAddBlock(){   /*UPDATE THE STORY HERE*/\n\n    if ( !localStorage.account || !localStorage.token ) return;\n\n    var story = this.props.match.params.story;\n\n    var ending = 0;\n    if ( document.getElementById(\"eos_check\").checked ) ending = 1;\n\n    var obj = JSON.stringify({\n        \"account\": localStorage.account,\n        \"token\": localStorage.token,\n        \"story\": story,\n        \"text\": document.getElementById(\"new_block\").value,\n        \"ending\": ending\n    });\n\n    document.getElementById(\"new_block\").value = \"\";\n    document.getElementById(\"eos_check\").checked = false;\n\n    var xhttp = new XMLHttpRequest();\n    xhttp.open(\"POST\", \"/api/block-create\", true);\n    xhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n    xhttp.onreadystatechange = function ()\n    {\n        if ( this.readyState === 4 && this.status === 200 )\n        {\n            var response = JSON.parse(this.responseText);\n            console.log(response);\n\n            if ( response.status === 'okay' )\n            {\n                // Refreshing is the easiest way\n                window.location.reload()\n            }\n        }\n    };\n    xhttp.send(obj);\n  }\n\n  onFlag2()\n  {\n    if ( !localStorage.account || !localStorage.token ) return;\n\n    var story = this.props.match.params.story;\n\n    var obj = JSON.stringify({\n        \"account\": localStorage.account,\n        \"token\": localStorage.token,\n        \"flag\": story\n    });\n\n    var xhttp = new XMLHttpRequest();\n    xhttp.open(\"POST\", \"/api/story-flag\" , true);\n    xhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n    xhttp.onreadystatechange = function ()\n    {\n        if ( this.readyState === 4 && this.status === 200 )\n        {\n            var response = JSON.parse(this.responseText);\n            console.log(response);\n\n            if ( response.status === 'okay' )\n            {\n\n            }\n        }\n    };\n    xhttp.send(obj);\n  }\n\n  //-----------------------FUNCTION TO ADD A BLOCK DYNAMICALLY-------------------------\n  onAddItem = ( updateVal, regblock ) =>{\n    this.setState(state => {\n        if ( !regblock )\n        {\n            const proposed = state.proposed.concat(updateVal);\n            return {\n                proposed,\n                value:{},\n            };\n        }\n        else\n        {\n            const blocks = state.blocks.concat(updateVal);\n            return {\n                blocks,\n                value:{},\n            };\n        }\n    });\n};\n//-----------------------------------------------------------------------------------------\n\n// -----LIKE BUTTON FUNCTION------\nonClickLike = (blockId) => {\n\n    if ( !localStorage.account || !localStorage.token ) return;\n\n    var obj = JSON.stringify({\n        \"account\": localStorage.account,\n        \"token\": localStorage.token,\n        \"block\": blockId\n    });\n\n    var xhttp = new XMLHttpRequest();\n    xhttp.open(\"POST\", \"/api/block-vote\" , true);\n    xhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n    xhttp.onreadystatechange = function ()\n    {\n        if ( this.readyState === 4 && this.status === 200 )\n        {\n            var response = JSON.parse(this.responseText);\n            console.log(response);\n\n            if ( response.status === 'okay' )\n            {\n                window.location.reload()\n            }\n        }\n    }\n    xhttp.send(obj)\n}\n\n  render() {\n    return (\n      \n     \n      <div className=\"App\">\n      \n        \n        \n        \n        {/* Menu top bar */}\n        <div className=\"notification-bar\">\n\n        {/* Anthologist logo */}\n        <div className=\"head\">\n          <h1 className=\"head1\">\n          <Link to='/'><a className=\"logo\" href>anthologist</a></Link></h1>\n        </div>\n        \n        {/* Search Bar */}\n        \n        <button className=\"user\"><Link to='/login'><img className=\"userimg\" src='/man.png'></img></Link> </button>\n        \n\n        </div>\n\n\n\n        {/* Title of story */}\n        <div id=\"story-title\" className=\"StoryTitle\"> Working Title<a className=\"title\" href> </a> </div>\n        \n\n        {/* ------------DYNAMICALLY COMPLETED BLOCKS---------------- */}\n        <div className='blocks-container'>\n            {\n              this.state.blocks.map(({id, iteration, content, author, username, flag, rating, ending}) =>{\n                return(\n                  <div className='blocks' key={id.toString()}>\n                      <button onClick={() => this.StoryopenModal(content)} className='st'>{content.toString().substring(0,15) + \" ...\"}</button>\n                      <a href={\"/profile/\" + author.toString()} className='author'>{username.toString()}</a>\n                      <div className='slash'>/</div>\n                      <button className=\"likeButton2\" onClick={() => this.onClickLike(id)} ><i id=\"like\" className=\"far fa-thumbs-up fa-2x\"></i></button>\n                      <div className='likes'>{rating.toString()} Likes</div>\n                  </div>\n                )\n              })\n            }\n        </div>\n        {/* ----------------------------------------------------------- */}\n\n        {/* Number of Likes */}\n        <div className='nOfLikes' id='nLikes'>400 Likes</div>\n\n        {/* Number of Views */}\n        <div className='nOfViews' id='nViews'>100 Views</div>\n\n        {/* Countdown */}\n        <div className='n1Count' id='nCount'>100 Min</div>\n\n\n        {/* Book Logo */}\n        <div className='book-logo'>\n         <img className=\"bookimg\" src='/book.png' ></img>\n        </div>\n\n        {/* Attributes */}\n        <div className='attributesBlock'>\n        <h1 className='attributes'>Attributes</h1>\n\n        <div className='cLimit' >\n        <span id='charLimit' className='st4'></span>\n\n        </div>\n          <div className='minBlocks'>\n            <span id='minBl' className='st4'></span>\n          </div>\n          <div className='vLimit'>\n          <span id='votesLimit' className='st4'></span>\n\n          </div>\n          <div className='vTime' >\n          <span id='votesTime' className='st4'></span>\n          </div>\n        </div>\n\n        {/* Change Time Button */}\n        <button className=\"changeTimeButton\" id =\"changeTime\" onClick={this.togglePopup.bind(this)} color=\"blue\">Change Vote Time </button>\n        \n        {/* Flag button */}\n                    <button id='flagID' className=\"flagStory\"><img className=\"flagimg\" src='/flg.png' onClick={() => this.onFlag2()} ></img> </button>\n\n\n        {/* ------------DYNAMICALLY PROPOSED BLOCKS---------------- */}\n        <div className='proposed'>\n        {\n              this.state.proposed.map(({id, iteration, content, author, username, flag, rating, ending}) =>{\n                return(\n                  <div className='p-blocks' key={id.toString()}>\n                      <button onClick={() => this.StoryopenModal(content)} className='st1'>{content.toString().substring(0,15) + \"...\"}</button>\n                 <a href={\"/profile/\" + author.toString()} className='author1'>{username.toString()}</a>  \n                      <div className='slash1'>/</div>\n                      <button className=\"likeButton3\" onClick={() => this.onClickLike(id)} ><i id=\"like\" className=\"far fa-thumbs-up fa-2x\"></i></button>\n                      <div className='likes1'>{rating.toString()} Likes</div>\n                  </div>\n                )\n              })\n            }\n\n            {/* ----------------------------------------------------------- */}\n\n            {/* <div className='p-blocks'>\n                <span className='st1'>Proposed Block 1</span>\n                <div className='author1'>Author</div>\n                <div className='slash1'>/</div>\n                <div className='likes1'>Likes</div>\n            </div>\n\n              <div className='p-blocks'>\n                <span className='st1'>Proposed Block 2</span>\n                <div className='author1'>Author</div>\n                <div className='slash1'>/</div>\n                <div className='likes1'>Likes</div>\n\n            </div> */}\n            \n            \n        </div>\n\n        {/* Add Block Button */}\n        <button className=\"addAButton\" onClick={this.open_addBlock} id=\"addAButtonID\" color=\"blue\">Add a block</button>\n       \n        {/* Add a bookmark button */}\n        <button className=\"bookmark\"><img className=\"bkimg\" onClick={() => this.onBookmarkClicked()} src='/bookmark.png'></img> </button>\n\n\n        \n\n        {this.state.showPopup ? \n          <Popup\n            text='Close Me'\n            closePopup={this.togglePopup.bind(this)}\n          />\n          : null\n        }\n\n      \n      <Modal /*THIS A STORY YOU NEED TO CHANGE*/\n          isOpen={this.state.StorymodalIsOpen} \n          onRequestClose={this.StorycloseModal}\n          style={customStyles}\n          contentLabel=\"Example Modal\">\n          <button onClick={this.StorycloseModal}>close</button>\n          <div>{this.state.StoryModalText}</div>\n       </Modal>\n\n        <Modal\n          isOpen={this.state.secondModalIsOpen}\n          onRequestClose={this.closeSecondModal}>\n         \n          <button onClick={this.closeSecondModal}> close </button>\n          <div>No dude</div>\n\n        </Modal>\n\n        <Modal\n          isOpen={this.state.addBlockIsOpen}\n          onRequestClose={this.close_addBlock}>\n\n              <div class=\"change-description\">\n              <label className='change-descp' > Add Block   </label>\n              <textarea className='add_block'  type=\"text\" id=\"new_block\"/>\n              </div>\n              <button onClick={() => this.onAddBlock()}>Add Block</button>\n              <label>\n              <input type=\"checkbox\" id=\"eos_check\" disabled={sessionStorage.canEndStory} value=\"ES\" />\n              End of Story\n              </label>\n\n              <button onClick={this.close_addBlock}>close</button>\n\n        </Modal>\n\n      </div>\n\n    );\n\n  }\n}\n\nexport default story;\n"]},"metadata":{},"sourceType":"module"}